services:
  postgres:
    container_name: postgres
    image: 'postgres:15-alpine3.17'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - POSTGRES_MULTIPLE_DATABASES=ms,transaction,log,partner
      - POSTGRES_USER=microservices
      - POSTGRES_PASSWORD=password
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
      - ./pg-init-scripts:/docker-entrypoint-initdb.d

  mongo:
    container_name: mongo
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: servicelog
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://127.0.0.1:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/data:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=0

  ms-order:
    container_name: ms-order
    build: 
      context: ./../ms-order
      dockerfile: ./ms-order.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  ms-logger:
    container_name: ms-logger
    build: 
      context: ./../ms-logger
      dockerfile: ./ms-logger.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVER=kafka:9092
      - SPRING_DATA_MONGODB_URI=mongodb://admin:password@mongo:27017
    ports:
      - "1337:1337"
    depends_on:
      - mongo
      - kafka

  ms-payment:
    container_name: ms-payment
    build: 
      context: ./../ms-payment
      dockerfile: ./ms-payment.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "9090:9090"
    depends_on:
      - postgres

  ms-invoice:
    container_name: ms-invoice
    build: 
      context: ./../ms-invoice
      dockerfile: ./ms-invoice.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVER=kafka:9092
    ports:
      - "8082:8082"
    depends_on:
      - postgres
      - kafka

  ms-paymentagr:
    container_name: ms-paymentagr
    build: 
      context: ./../ms-paymentagr
      dockerfile: ./ms-paymentagr.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "8081:8081"
    depends_on:
      - redis